#!/usr/bin/env bash
set -e


while IFS=$'\r\n' read -r item; do

key=$(jq -nr '$item.key' --argjson item "$item")
version=$(jq -nr '$item.version' --argjson item "$item")
if [ "$key" = null ]; then continue; fi

pname=$(jq -nr '$item.name' --argjson item "$item")
url=$(jq -nr '$item.srcs[0].url' --argjson item "$item")
sha256=$(jq -nr '$item.srcs[0].sha256' --argjson item "$item")

sysdeps=()
pydeps=( $(jq -nr '$item.deps[].key' --argjson item "$item") )

attribute=${key}_${version//./_}

if [ -f "index/$key/overrides.json" ]; then
    sysdeps+=( $(jq -r '.systemDepends[]' < "index/$key/overrides.json" 2>/dev/null) ) || true
    pydeps+=( $(jq -r '.pythonDepends[]' < "index/$key/overrides.json" 2>/dev/null) ) || true
fi

inputexpr=
for dep in "${sysdeps[@]}" "${pydeps[@]}"; do
  inputexpr+=", $dep"
done

drvexpr=
drvexpr+="${sysdeps:+
       systemDepends = [ ${sysdeps[*]} ];}"
drvexpr+="${pydeps:+
       pythonDepends = [ ${pydeps[*]} ];}"

argsexpr=

mkdir -p "cache/$key"
cat <<-EOF > "cache/$key/$version.nix"
  ${attribute} = callPackage
    ({ mkPythonPackage, fetchurl$inputexpr }:
     mkPythonPackage {
       pname = "$pname";
       version = "$version";
       src = fetchurl {
         url = "$url";
         sha256 = "$sha256";
       };$drvexpr
     }) {$argsexpr};
EOF

done

cat <<-EOF
{ pkgs, pythonPlatform, callPackage }:

self:

{
EOF

prefix=
for f in cache/**/*.nix; do
    echo -n "$prefix"
    prefix=$'\n'
    cat "$f"
done

cat <<-EOF
}
EOF

# vim:set ft=sh:
