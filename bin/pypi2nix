#!/usr/bin/env bash
set -e

PATH="$(dirname "${BASH_SOURCE[0]}"):$PATH"

declare -a flagsArray=()

while [ $# -gt 0 ]; do
  i=$1; shift
  case $i in
    --)
      break;;
    *)
      flagsArray+=("$i");;
  esac
done

nix-instantiate --eval --strict --json -A pythonng.index \
  | jq -r '.[] | select(.pname) | [.pname, .version] | join("==")' \
  > pypi-requirements.txt

pip2nix --no-print-expr -r pypi-requirements.txt "$@"
rm pypi-requirements.txt

if [ ${#flagsArray[@]} -gt 0 ]; then
  pip2nix --no-print-expr "${flagsArray[@]}" "$@"
fi

cat <<-EOF > pkgs/python-modules/pypi-packages.nix
{ pkgs, callPackage }:

self:

{$(find cache -name '*.nix' -exec cat {} \; -and -exec echo "" \;)
}
EOF

if [ ! -f requirements.txt ]; then exit; fi

generate() {
  local item=$1

  item=${item%%#*}
  item=${item%%;*}
  item=${item%% *}

  case $item in
    *==*)
      key=${item%==*}
      key=${key//./-}
      key=${key//_/-}
      version=${item#*==}
      version=${version//-/_}
      version=${version//./_}
      echo "  $key = self.${key}_${version};";;
  esac
}

cat <<-EOF
self: super:

{
$(while read -r item; do
  generate "$item"
done < requirements.txt)
}
EOF
